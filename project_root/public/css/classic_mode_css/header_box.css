/* CONTENTS
- Header box with border (before)
- Header container (actual box)
- Header title ("Guess Todays marvel rivals hero!")
- Header subtitle ("Type any character to start")
- Active Header box (when in use)
- Clue icons
*/
.headerBoxContainer::before {
    content: '';
    position: absolute;
    top: -5%;
    /* Make this relative to the container height */
    left: -5%;
    /* Adjust the border's left position relative to container */
    width: 110%;
    /* Ensure the border covers the container width regardless of resizing */
    height: 120%;
    /* Ensure the border covers the container height */
    background-image: url('../../_images/home_images/skinnyborder.png');
    background-size: cover;
    background-repeat: no-repeat;
    pointer-events: none;
    /* Allow clicks to pass through to the content */
    z-index: 1;
    /* Place the border behind the content */
}

.headerBoxContainer {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 80vw;
    /* Make the container width relative to viewport */
    height: 20vh;
    /* Make the container height relative to viewport */
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-color: #00000052;
    flex-direction: column;
}

.headerBoxTitle {
    position: relative;
    padding-bottom: 10px;
    /* Reduced padding */
    padding-top: 4%;
    font-size: 1.5em;
    /* Use em units for responsive font size */
    font-family: 'MarvelFont', sans-serif;
    text-transform: uppercase;
    color: #ffffff;
}

.headerBoxSubtitle {
    position: relative;
    font-family: 'MarvelFont', sans-serif;
    font-size: 1.2em;
    /* Smaller font size */
    color: #ffffff;
}

.activeHeaderBoxContainer {
    position: relative;
    display: none;
    /* Set to flex when you want it visible */
    justify-content: center;
    align-items: center;
    width: 80vw;
    /* Adjust width dynamically */
    height: auto;
    padding: 40px;
    /* Adjust padding for smaller spacing */
    background-color: rgba(0, 0, 0, 0.751);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    flex-direction: column;
    gap: 20px;
    /* Smaller gap between elements */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    /* Smaller shadow */
}

/* ::before pseudo-element with the background image acting as a border */
.activeHeaderBoxContainer::before {
    content: '';
    position: absolute;
    top: -11.2%;
    /* Use relative positioning */
    left: -10%;
    /* Adjust to ensure the border aligns with the container */
    right: -5%;
    /* Ensure border extends to both sides */
    height: calc(100% + 25%);
    /* Use calc to extend the height proportionally */
    background-image: url('../../_images/home_images/skinnyborder.png');
    background-size: 112% 121%;
    /* Adjust the border image size */
    background-position: center;
    background-repeat: no-repeat;
    z-index: 1;
    pointer-events: none;
}

.clueContainer {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: row;
    gap: 20px;
    /* Reduced gap */
    font-size: 1.2em;
    /* Use relative font size */
    color: #ffffff;
    font-family: 'MarvelFont', sans-serif;
}

.clueSubContainer {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    font-size: 1.2em;
    /* Smaller font size */
}

.clueSubContainer img {
    width: 40px;
    /* Smaller image size */
    height: 40px;
    object-fit: cover;
    border-radius: inherit;
}

.clueSubContainer img:hover {
    transform: scale(1.1);
    /* Slightly smaller hover scale */
}

.activeImage {
    transition: transform 0.5s ease;
    animation: hoverUpDown 1.5s ease-in-out infinite;
    /* Faster animation */
}

.characterSilhoutteImg {
    position: relative;
    display: flex;
    height: 200px;
    /* Reduced size */
    width: 200px;
    /* Reduced size */
    justify-content: center;
    transition: all 0.3s ease;
    padding-bottom: 0px;
    /* Reduced bottom padding */
}

@keyframes hoverUpDown {

    0%,
    100% {
        transform: translateY(-1px);
        /* Smaller movement */
    }

    50% {
        transform: translateY(0);
        /* Returns to original position */
    }
}