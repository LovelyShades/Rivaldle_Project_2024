{"version":3,"file":"es.js","sources":["../../src/options.ts","../../src/label/simplified.ts","../../src/label/traditional.ts","../../src/label/index.ts","../../src/to-chinese.ts","../../src/to-ordinal.ts"],"sourcesContent":["export type ChineseType = \"simplified\" | \"traditional\";\nexport interface NumberToChineseOptionsObject {\n  chineseType: ChineseType;\n  keepOne: boolean;\n}\n\nexport type ShortChineseType = \"s\" | \"t\";\n\nexport type NumberToChineseOptions =\n  | ShortChineseType\n  | ChineseType\n  | Partial<NumberToChineseOptionsObject>;\n\nconst DEFAULT_OPTIONS: NumberToChineseOptionsObject = Object.freeze({\n  chineseType: \"simplified\",\n  keepOne: false,\n});\n\nexport function normalizeChineseType(\n  type: ShortChineseType | ChineseType,\n): ChineseType {\n  switch (type) {\n    case \"s\":\n      return \"simplified\";\n    case \"t\":\n      return \"traditional\";\n    default:\n      return type;\n  }\n}\n\nexport function normalizeOptions(\n  opts?: NumberToChineseOptions,\n): NumberToChineseOptionsObject {\n  if (typeof opts === \"boolean\") {\n    return {\n      chineseType: opts ? \"traditional\" : \"simplified\",\n      keepOne: DEFAULT_OPTIONS.keepOne,\n    };\n  } else if (typeof opts === \"string\") {\n    return {\n      chineseType: normalizeChineseType(opts),\n      keepOne: DEFAULT_OPTIONS.keepOne,\n    };\n  } else if (typeof opts === \"object\" && opts !== null) {\n    return {\n      chineseType:\n        typeof opts.chineseType === \"string\"\n          ? normalizeChineseType(opts.chineseType)\n          : DEFAULT_OPTIONS.chineseType,\n      keepOne:\n        typeof opts.keepOne === \"undefined\"\n          ? DEFAULT_OPTIONS.keepOne\n          : !!opts.keepOne,\n    };\n  } else {\n    return DEFAULT_OPTIONS;\n  }\n}\n","import type { NumberToChineseLabels } from \".\";\n\nconst labels: NumberToChineseLabels = {\n  digits: [\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"],\n  units: [\n    \"\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"万\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"亿\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"兆\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"京\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"垓\",\n  ],\n  ordinal: \"第\",\n  point: \"点\",\n  minus: \"负\",\n};\n\nexport default labels;\n","import type { NumberToChineseLabels } from \".\";\n\nconst labels: NumberToChineseLabels = {\n  digits: [\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"],\n  units: [\n    \"\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"萬\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"億\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"兆\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"京\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"垓\",\n  ],\n  ordinal: \"第\",\n  point: \"點\",\n  minus: \"負\",\n};\n\nexport default labels;\n","import * as labels from \"./labels\";\nimport { NumberToChineseOptionsObject } from \"../options\";\n\nexport interface NumberToChineseLabels {\n  digits: [\n    // 零\n    string,\n    // 一\n    string,\n    // 二\n    string,\n    // 三\n    string,\n    // 四\n    string,\n    // 五\n    string,\n    // 六\n    string,\n    // 七\n    string,\n    // 八\n    string,\n    // 九\n    string,\n  ];\n  units: [\n    \"\",\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 万\n    string,\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 亿\n    string,\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 兆\n    string,\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 京\n    string,\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 垓\n    string,\n  ];\n  ordinal: string; // 第\n  point: string; // 点\n  minus: string; // 负\n}\n\nexport * from \"./labels\";\n\nexport function getLabels(\n  opts: NumberToChineseOptionsObject,\n): NumberToChineseLabels {\n  return labels[opts.chineseType];\n}\n","import { NumberToChineseOptions, normalizeOptions } from \"./options\";\nimport { getLabels, NumberToChineseLabels } from \"./label\";\n\ninterface LabelRegexps {\n  onlyZero: [RegExp, string];\n  zeroBetweenBigUnits: [RegExp, string];\n  zeroBetweenSmallAndBigUnits: [RegExp, string];\n  groupZero: [RegExp, string];\n  removeTailZero: [RegExp, string];\n  removeOne: [RegExp, string];\n}\n\nconst regexps = new WeakMap<NumberToChineseLabels, LabelRegexps>();\n\nfunction getRegexps(labels: NumberToChineseLabels): LabelRegexps {\n  const r = regexps.get(labels);\n\n  if (r) {\n    return r;\n  }\n\n  const { digits, units } = labels;\n  const smallUnit = units[1] + units[2] + units[3];\n  const bigUnit = units[4] + units[8] + units[12] + units[16] + units[20];\n  const zero = digits[0];\n\n  const v: LabelRegexps = {\n    // 零千,零百,零十 keeps 零\n    onlyZero: [new RegExp(`(${zero})[${smallUnit}]`, \"g\"), \"$1\"],\n    //大數中間沒細數，補零\n    zeroBetweenBigUnits: [\n      new RegExp(`([${bigUnit}])[^${smallUnit}]+([${bigUnit}])`, \"g\"),\n      \"$1\" + zero,\n    ],\n    zeroBetweenSmallAndBigUnits: [\n      new RegExp(`([${smallUnit}])${zero}+([${bigUnit}])`, \"g\"),\n      \"$1$2\" + zero,\n    ],\n    //group 零\n    groupZero: [new RegExp(`(${digits[0]})+`, \"g\"), \"$1\"],\n    // remove tail zero\n    removeTailZero: [new RegExp(zero + \"+$\"), \"\"],\n    // 一十 => 十\n    removeOne: [new RegExp(`^${digits[1]}${units[1]}`), units[1]],\n  };\n  regexps.set(labels, v);\n\n  return v;\n}\n\nfunction parseIntPart(\n  num: number,\n  labels: NumberToChineseLabels,\n  keepOne: boolean,\n) {\n  const { digits, units, minus } = labels;\n\n  const regexps = getRegexps(labels);\n\n  let n = Math.floor(Math.abs(num));\n\n  // 0\n  if (n < 1) return (num < 0 ? minus : \"\") + digits[0];\n\n  let str = \"\";\n  let unitIndex = 0;\n  while (n > 0) {\n    str = digits[n % 10] + units[unitIndex] + str;\n\n    n = Math.floor(n / 10);\n    unitIndex++;\n  }\n\n  str = str\n    .replace(...regexps.onlyZero)\n    .replace(...regexps.zeroBetweenBigUnits)\n    .replace(...regexps.zeroBetweenSmallAndBigUnits)\n    .replace(...regexps.groupZero)\n    .replace(...regexps.removeTailZero);\n\n  if (keepOne != true) {\n    str = str.replace(...regexps.removeOne);\n  }\n\n  return (num < 0 ? minus : \"\") + str;\n}\n\nfunction parseFloatPart(num: number, labels: NumberToChineseLabels): string {\n  if (num % 1 === 0) return \"\";\n\n  num = Math.abs(num);\n  const { digits, point } = labels;\n\n  let numStr = num.toString();\n  numStr = numStr.slice(numStr.indexOf(\".\") + 1);\n\n  let str = \"\";\n  for (const d of numStr) {\n    str = str + digits[parseInt(d)];\n  }\n\n  return point + str;\n}\n\nexport function numberToChinese(\n  num: number,\n  options?: NumberToChineseOptions,\n): string {\n  const opts = normalizeOptions(options);\n  const labels = getLabels(opts);\n  return parseIntPart(num, labels, opts.keepOne) + parseFloatPart(num, labels);\n}\n","import { NumberToChineseOptions, normalizeOptions } from \"./options\";\nimport { getLabels } from \"./label\";\nimport { numberToChinese } from \"./to-chinese\";\n\nexport function numberToChineseOrdinalWithArabic(\n  num: number,\n  options?: NumberToChineseOptions,\n): string {\n  return getLabels(normalizeOptions(options)).ordinal + num.toString(10);\n}\n\nexport function numberToChineseOrdinal(\n  num: number,\n  options?: NumberToChineseOptions,\n): string {\n  const opts = normalizeOptions(options);\n  return getLabels(opts).ordinal + numberToChinese(num, opts);\n}\n"],"names":["DEFAULT_OPTIONS","Object","freeze","chineseType","keepOne","normalizeChineseType","type","normalizeOptions","opts","labels","digits","units","ordinal","point","minus","getLabels","regexps","WeakMap","getRegexps","r","get","smallUnit","bigUnit","zero","v","onlyZero","RegExp","zeroBetweenBigUnits","zeroBetweenSmallAndBigUnits","groupZero","removeTailZero","removeOne","set","parseIntPart","num","n","Math","floor","abs","str","unitIndex","replace","parseFloatPart","numStr","toString","slice","indexOf","d","parseInt","numberToChinese","options","numberToChineseOrdinalWithArabic","numberToChineseOrdinal"],"mappings":"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"}