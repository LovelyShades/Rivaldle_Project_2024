{"version":3,"file":"es.min.js","sources":["../../src/options.ts","../../src/label/simplified.ts","../../src/label/traditional.ts","../../src/label/index.ts","../../src/to-chinese.ts","../../src/to-ordinal.ts"],"sourcesContent":["export type ChineseType = \"simplified\" | \"traditional\";\nexport interface NumberToChineseOptionsObject {\n  chineseType: ChineseType;\n  keepOne: boolean;\n}\n\nexport type ShortChineseType = \"s\" | \"t\";\n\nexport type NumberToChineseOptions =\n  | ShortChineseType\n  | ChineseType\n  | Partial<NumberToChineseOptionsObject>;\n\nconst DEFAULT_OPTIONS: NumberToChineseOptionsObject = Object.freeze({\n  chineseType: \"simplified\",\n  keepOne: false,\n});\n\nexport function normalizeChineseType(\n  type: ShortChineseType | ChineseType,\n): ChineseType {\n  switch (type) {\n    case \"s\":\n      return \"simplified\";\n    case \"t\":\n      return \"traditional\";\n    default:\n      return type;\n  }\n}\n\nexport function normalizeOptions(\n  opts?: NumberToChineseOptions,\n): NumberToChineseOptionsObject {\n  if (typeof opts === \"boolean\") {\n    return {\n      chineseType: opts ? \"traditional\" : \"simplified\",\n      keepOne: DEFAULT_OPTIONS.keepOne,\n    };\n  } else if (typeof opts === \"string\") {\n    return {\n      chineseType: normalizeChineseType(opts),\n      keepOne: DEFAULT_OPTIONS.keepOne,\n    };\n  } else if (typeof opts === \"object\" && opts !== null) {\n    return {\n      chineseType:\n        typeof opts.chineseType === \"string\"\n          ? normalizeChineseType(opts.chineseType)\n          : DEFAULT_OPTIONS.chineseType,\n      keepOne:\n        typeof opts.keepOne === \"undefined\"\n          ? DEFAULT_OPTIONS.keepOne\n          : !!opts.keepOne,\n    };\n  } else {\n    return DEFAULT_OPTIONS;\n  }\n}\n","import type { NumberToChineseLabels } from \".\";\n\nconst labels: NumberToChineseLabels = {\n  digits: [\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"],\n  units: [\n    \"\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"万\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"亿\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"兆\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"京\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"垓\",\n  ],\n  ordinal: \"第\",\n  point: \"点\",\n  minus: \"负\",\n};\n\nexport default labels;\n","import type { NumberToChineseLabels } from \".\";\n\nconst labels: NumberToChineseLabels = {\n  digits: [\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"],\n  units: [\n    \"\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"萬\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"億\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"兆\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"京\",\n    \"十\",\n    \"百\",\n    \"千\",\n    \"垓\",\n  ],\n  ordinal: \"第\",\n  point: \"點\",\n  minus: \"負\",\n};\n\nexport default labels;\n","import * as labels from \"./labels\";\nimport { NumberToChineseOptionsObject } from \"../options\";\n\nexport interface NumberToChineseLabels {\n  digits: [\n    // 零\n    string,\n    // 一\n    string,\n    // 二\n    string,\n    // 三\n    string,\n    // 四\n    string,\n    // 五\n    string,\n    // 六\n    string,\n    // 七\n    string,\n    // 八\n    string,\n    // 九\n    string,\n  ];\n  units: [\n    \"\",\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 万\n    string,\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 亿\n    string,\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 兆\n    string,\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 京\n    string,\n    // 十\n    string,\n    // 百\n    string,\n    // 千\n    string,\n    // 垓\n    string,\n  ];\n  ordinal: string; // 第\n  point: string; // 点\n  minus: string; // 负\n}\n\nexport * from \"./labels\";\n\nexport function getLabels(\n  opts: NumberToChineseOptionsObject,\n): NumberToChineseLabels {\n  return labels[opts.chineseType];\n}\n","import { NumberToChineseOptions, normalizeOptions } from \"./options\";\nimport { getLabels, NumberToChineseLabels } from \"./label\";\n\ninterface LabelRegexps {\n  onlyZero: [RegExp, string];\n  zeroBetweenBigUnits: [RegExp, string];\n  zeroBetweenSmallAndBigUnits: [RegExp, string];\n  groupZero: [RegExp, string];\n  removeTailZero: [RegExp, string];\n  removeOne: [RegExp, string];\n}\n\nconst regexps = new WeakMap<NumberToChineseLabels, LabelRegexps>();\n\nfunction getRegexps(labels: NumberToChineseLabels): LabelRegexps {\n  const r = regexps.get(labels);\n\n  if (r) {\n    return r;\n  }\n\n  const { digits, units } = labels;\n  const smallUnit = units[1] + units[2] + units[3];\n  const bigUnit = units[4] + units[8] + units[12] + units[16] + units[20];\n  const zero = digits[0];\n\n  const v: LabelRegexps = {\n    // 零千,零百,零十 keeps 零\n    onlyZero: [new RegExp(`(${zero})[${smallUnit}]`, \"g\"), \"$1\"],\n    //大數中間沒細數，補零\n    zeroBetweenBigUnits: [\n      new RegExp(`([${bigUnit}])[^${smallUnit}]+([${bigUnit}])`, \"g\"),\n      \"$1\" + zero,\n    ],\n    zeroBetweenSmallAndBigUnits: [\n      new RegExp(`([${smallUnit}])${zero}+([${bigUnit}])`, \"g\"),\n      \"$1$2\" + zero,\n    ],\n    //group 零\n    groupZero: [new RegExp(`(${digits[0]})+`, \"g\"), \"$1\"],\n    // remove tail zero\n    removeTailZero: [new RegExp(zero + \"+$\"), \"\"],\n    // 一十 => 十\n    removeOne: [new RegExp(`^${digits[1]}${units[1]}`), units[1]],\n  };\n  regexps.set(labels, v);\n\n  return v;\n}\n\nfunction parseIntPart(\n  num: number,\n  labels: NumberToChineseLabels,\n  keepOne: boolean,\n) {\n  const { digits, units, minus } = labels;\n\n  const regexps = getRegexps(labels);\n\n  let n = Math.floor(Math.abs(num));\n\n  // 0\n  if (n < 1) return (num < 0 ? minus : \"\") + digits[0];\n\n  let str = \"\";\n  let unitIndex = 0;\n  while (n > 0) {\n    str = digits[n % 10] + units[unitIndex] + str;\n\n    n = Math.floor(n / 10);\n    unitIndex++;\n  }\n\n  str = str\n    .replace(...regexps.onlyZero)\n    .replace(...regexps.zeroBetweenBigUnits)\n    .replace(...regexps.zeroBetweenSmallAndBigUnits)\n    .replace(...regexps.groupZero)\n    .replace(...regexps.removeTailZero);\n\n  if (keepOne != true) {\n    str = str.replace(...regexps.removeOne);\n  }\n\n  return (num < 0 ? minus : \"\") + str;\n}\n\nfunction parseFloatPart(num: number, labels: NumberToChineseLabels): string {\n  if (num % 1 === 0) return \"\";\n\n  num = Math.abs(num);\n  const { digits, point } = labels;\n\n  let numStr = num.toString();\n  numStr = numStr.slice(numStr.indexOf(\".\") + 1);\n\n  let str = \"\";\n  for (const d of numStr) {\n    str = str + digits[parseInt(d)];\n  }\n\n  return point + str;\n}\n\nexport function numberToChinese(\n  num: number,\n  options?: NumberToChineseOptions,\n): string {\n  const opts = normalizeOptions(options);\n  const labels = getLabels(opts);\n  return parseIntPart(num, labels, opts.keepOne) + parseFloatPart(num, labels);\n}\n","import { NumberToChineseOptions, normalizeOptions } from \"./options\";\nimport { getLabels } from \"./label\";\nimport { numberToChinese } from \"./to-chinese\";\n\nexport function numberToChineseOrdinalWithArabic(\n  num: number,\n  options?: NumberToChineseOptions,\n): string {\n  return getLabels(normalizeOptions(options)).ordinal + num.toString(10);\n}\n\nexport function numberToChineseOrdinal(\n  num: number,\n  options?: NumberToChineseOptions,\n): string {\n  const opts = normalizeOptions(options);\n  return getLabels(opts).ordinal + numberToChinese(num, opts);\n}\n"],"names":["DEFAULT_OPTIONS","Object","freeze","chineseType","keepOne","normalizeChineseType","type","normalizeOptions","opts","digits","units","ordinal","point","minus","getLabels","labels","regexps","WeakMap","getRegexps","r","get","smallUnit","bigUnit","zero","v","onlyZero","RegExp","zeroBetweenBigUnits","zeroBetweenSmallAndBigUnits","groupZero","removeTailZero","removeOne","set","numberToChinese","num","options","n","Math","floor","abs","str","unitIndex","replace","parseIntPart","numStr","toString","slice","indexOf","d","parseInt","parseFloatPart","numberToChineseOrdinalWithArabic","numberToChineseOrdinal"],"mappings":"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"}